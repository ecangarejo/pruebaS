/**
 * NOMBRE DE LA CLASE: ControlEliminarCama
 * AUTOR: Oscar Rolong Schweiger
 * DESCRIPCION: En este Controlador se encuentra lo necesario
 * 				para eliminar una cama. 				
 */
package Controlador;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import logica.MetodoEliminar;

public class ControlEliminarCama extends HttpServlet{
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	public void doPost(HttpServletRequest req, HttpServletResponse res)throws ServletException, IOException{
	/**
	 * se reciben los datos por parametros
	 */
		String va = req.getParameter("va");		
		String cama=req.getParameter("cama");		
		String x=req.getParameter("x");		
		String y=req.getParameter("y");				
		MetodoEliminar me=new MetodoEliminar();
		ResultSet rs=null;	
		if (va.equals("1")){	
			/**
			 * se obtienen las areas como esta repartida la clinica
			 * mediante una consulta MetodoEliminar/obtenerArea
			 
			 */
			rs=me.obtenerArea();
			String v[] = new String[1000];
			try{
				int c=0;
				while(rs.next()){
					PrintWriter out=res.getWriter();
					v[c]=rs.getString(1);
					out.println(v[c]+"_");					
					c++;
				}			
			}
			 catch(SQLException e1){
				 e1.getMessage();
			 }			 
		}
		
		if(va.equals("2")){
			/**
			 * se obtienen las subareas como esta repartida la clinica
			 * mediante una consulta MetodoEliminar/obtenerSubArea
			 * que lleva como parametro el nombre del area.
			 
			 */
			 rs= me.obtenerSubArea(x);		
			 String s[] = new String[1000];
				try{
					int k=0;
					while(rs.next()){
						PrintWriter out=res.getWriter();
						s[k]=rs.getString(1);
						out.println(s[k]+"_");
						k++;								
					}			
				}			
				 catch(SQLException e1){
					 e1.getMessage();
					 }
		}
		
		if(va.equals("3")){
			/**
			 * se obtienen las subareas como esta repartida la clinica
			 * mediante una consulta MetodoEliminar/obtenerCama
			 * que lleva como parametro el nombre de la subarea.			 
			 */
			 rs= me.obtenerCama(y);		
			 String s[] = new String[1000];
				try{
					int k=0;
					while(rs.next()){
						PrintWriter out=res.getWriter();
						s[k]=rs.getString(1);
						out.println(s[k]+"_");
						k++;		
					}			
				}			
				 catch(SQLException e1){
					 e1.getMessage();
					 }	
		}
		
		if (va.equals("4")){	
			/**
			 * se obtienen los datos de la cama a eliminar
			 * mediante una consulta MetodoEliminar/obtenerCamaEliminar
			 * que lleva como parametro el nombre de la cama.			 
			 */
			rs=me.obtenerCamaEliminar(cama);
			 String codigo=null;
			 String tipohab=null;
			 String piso=null;
			 String tipocama=null;
			 String observaciones=null;
			 String posx=null;
			 String posy=null;			
			 String posicion=null;			 
			 PrintWriter out=res.getWriter();
				try{				
					while(rs.next()){
						codigo=rs.getString(1);					
						tipohab=rs.getString(2);
						piso=rs.getString(3);
						tipocama=rs.getString(4);
						observaciones=rs.getString(5);
						posx=rs.getString(6);
						posy=rs.getString(7);;
						posicion=rs.getString(8);						
						 if (posicion!= null){		 
							 if(posicion.equals("H")){
									posicion="HORIZONTAL";
								}
							  if(posicion.equals("V")){
									posicion="VERTICAL";
								}
							 }						
						out.println(codigo+"_"+tipohab+"_"+piso+"_"+tipocama+"_"+observaciones+"_"+posx+"_"+posy+"_"+posicion);
					}					
				}
				 catch(SQLException e1){
					 e1.getMessage();
					 }
				 }
		
	}
	public void doGet(HttpServletRequest req, HttpServletResponse res)throws ServletException, IOException{
	/**
	 * se recibe el codigo de la cama a eliminar
	 * y se procede a este mediante MetodoEliminar/EliminarCama
	 */
		MetodoEliminar me=new MetodoEliminar();
		String codigo=null;		
		codigo=req.getParameter("codigo");		
		me.EliminarCama(codigo);
		res.sendRedirect("Adm_EliminarCama.jsp");
	}

}
